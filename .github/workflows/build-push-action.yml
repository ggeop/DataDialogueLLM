name: Docker Compose Build and Push

on:
  pull_request:
    types: [closed]
    branches:
      - develop
      - master
  workflow_dispatch:  # For manual triggering

jobs:
  docker:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate short SHA
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set environment variables
        run: |
          echo "DOCKER_REGISTRY=${{ secrets.DOCKER_REGISTRY }}" >> $GITHUB_ENV
          echo "TAG=${{ steps.vars.outputs.SHORT_SHA }}" >> $GITHUB_ENV

      - name: Debug Docker Compose configuration
        run: |
          echo "Docker Registry: ${{ secrets.DOCKER_REGISTRY }}"
          echo "Tag: ${{ steps.vars.outputs.SHORT_SHA }}"
          docker-compose config

      - name: Build and push Docker Compose services
        run: |
          docker-compose build
          for service in $(docker-compose config --services); do
            echo "Pushing service: $service"
            docker-compose push $service
          done

      - name: Tag and push latest for master branch
        if: github.ref == 'refs/heads/master'
        run: |
          for service in $(docker-compose config --services); do
            echo "Tagging and pushing latest for service: $service"
            docker tag ${{ secrets.DOCKER_REGISTRY }}/${service}:${{ steps.vars.outputs.SHORT_SHA }} ${{ secrets.DOCKER_REGISTRY }}/${service}:latest
            docker push ${{ secrets.DOCKER_REGISTRY }}/${service}:latest
          done
