services:
# ============================
# Data Services
# ============================
  try-demo-db-local:
    build: ./database/postgres
    image: localhost/data-dialogue-try-demo-db:latest
    environment:
      POSTGRES_DB: dvdrental
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    volumes:
      - try_on_data:/var/lib/postgresql/data
    command: >
      bash -c "
        echo 'Starting PostgreSQL and initialization script...';
        docker-entrypoint.sh postgres &
        until pg_isready -U demo -d dvdrental; do
          echo 'Waiting for PostgreSQL to start...';
          sleep 2;
        done;
        echo 'PostgreSQL is ready. Running initialization script...';
        bash /docker-entrypoint-initdb.d/load-dvd-rental-db.sh;
        echo 'Initialization complete. Keeping container running...';
        wait
      "
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U demo -d dvdrental"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles: ["local"]

  try-demo-db-dev:
    extends: try-demo-db-local
    image: ${DOCKER_REGISTRY}/data-dialogue-backend:${TAG:-latest}
    profiles: ["development"]

  try-demo-db-prod:
    extends: try-demo-db-local
    image: ${DOCKER_REGISTRY}/data-dialogue-backend:${TAG:-latest}
    profiles: ["production"]

# ============================
# Backend Services
# ============================
  backend-local:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: localhost/data-dialogue-backend:latest
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - models:/data/models
    profiles: ["local"]

  backend-dev:
    extends: backend-local
    image: ${DOCKER_REGISTRY}/data-dialogue-backend:${TAG:-latest}
    volumes:
      - ./backend:/app
      - models:/data/models
    profiles: ["development"]

  backend-prod:
    extends: backend-local
    image: ${DOCKER_REGISTRY}/data-dialogue-backend:${TAG:-latest}
    volumes:
      - models:/data/models
    profiles: ["production"]

# ============================
# Frontend Services
# ============================
  frontend-local:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: localhost/data-dialogue-frontend:latest
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    ports:
      - "5000:5000"
    volumes:
      - ./frontend:/app
    profiles: ["local"]

  frontend-dev:
    extends: frontend-local
    image: ${DOCKER_REGISTRY}/data-dialogue-frontend:${TAG:-latest}
    depends_on:
      - try-demo-db-dev
      - backend-dev
    volumes:
      - ./frontend:/app
    profiles: ["development"]
      
  frontend-prod:
    extends: frontend-local
    image: ${DOCKER_REGISTRY}/data-dialogue-frontend:${TAG:-latest}
    depends_on:
      - try-demo-db-prod
      - backend-prod
    profiles: ["production"]

# ============================
# Other
# ============================

volumes:
  try_on_data:
  models:

networks:
  default:
    name: data-dialogue-network
    driver: bridge